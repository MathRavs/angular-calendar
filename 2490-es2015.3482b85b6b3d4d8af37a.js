"use strict";(self.webpackChunkangular_calendar=self.webpackChunkangular_calendar||[]).push([[2490],{42490:function(n,a,s){s.r(a),s.d(a,{sources:function(){return e}});const e=[{filename:"component.ts",contents:{raw:s(27278),highlighted:s(61060)}},{filename:"template.html",contents:{raw:s(34665),highlighted:s(22846)}},{filename:"module.ts",contents:{raw:s(34065),highlighted:s(16024)}}]},61060:function(n,a,s){s.r(a),a.default='<span class="hljs-keyword">import</span> { Component, ChangeDetectionStrategy, Injectable } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CalendarEvent, CalendarUtils } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { subWeeks, startOfMonth, endOfMonth, addWeeks } from <span class="hljs-string">\'date-fns\'</span>;\n<span class="hljs-keyword">import</span> { GetMonthViewArgs, MonthView } from <span class="hljs-string">\'calendar-utils\'</span>;\n\n@Injectable()\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> MyCalendarUtils extends CalendarUtils {\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    args.viewStart = subWeeks(startOfMonth(args.viewDate), <span class="hljs-number">1</span>);\n    args.viewEnd = addWeeks(endOfMonth(args.viewDate), <span class="hljs-number">1</span>);\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.getMonthView(args);\n  }\n}\n\n@Component({\n  selector: <span class="hljs-string">\'mwl-demo-component\'</span>,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: <span class="hljs-string">\'template.html\'</span>,\n  providers: [\n    {\n      provide: CalendarUtils,\n      useClass: MyCalendarUtils,\n    },\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoComponent {\n  viewDate: <span class="hljs-built_in">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();\n\n  events: CalendarEvent[] = [];\n}\n'},16024:function(n,a,s){s.r(a),a.default='<span class="hljs-keyword">import</span> { NgModule } from <span class="hljs-string">\'@angular/core\'</span>;\n<span class="hljs-keyword">import</span> { CommonModule } from <span class="hljs-string">\'@angular/common\'</span>;\n<span class="hljs-keyword">import</span> { RouterModule } from <span class="hljs-string">\'@angular/router\'</span>;\n<span class="hljs-keyword">import</span> { CalendarModule, DateAdapter } from <span class="hljs-string">\'angular-calendar\'</span>;\n<span class="hljs-keyword">import</span> { DemoUtilsModule } from <span class="hljs-string">\'../demo-utils/module\'</span>;\n<span class="hljs-keyword">import</span> { DemoComponent } from <span class="hljs-string">\'./component\'</span>;\n<span class="hljs-keyword">import</span> { adapterFactory } from <span class="hljs-string">\'angular-calendar/date-adapters/date-fns\'</span>;\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: <span class="hljs-string">\'\'</span>, component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> DemoModule {}\n'},22846:function(n,a,s){s.r(a),a.default='<span class="hljs-tag">&lt;<span class="hljs-title">mwl-calendar-month-view</span> [<span class="hljs-attribute">viewDate</span>]=<span class="hljs-value">"viewDate"</span> [<span class="hljs-attribute">events</span>]=<span class="hljs-value">"events"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-title">mwl-calendar-month-view</span>&gt;</span>\n'},27278:function(n,a,s){s.r(a),a.default="import { Component, ChangeDetectionStrategy, Injectable } from '@angular/core';\nimport { CalendarEvent, CalendarUtils } from 'angular-calendar';\nimport { subWeeks, startOfMonth, endOfMonth, addWeeks } from 'date-fns';\nimport { GetMonthViewArgs, MonthView } from 'calendar-utils';\n\n@Injectable()\nexport class MyCalendarUtils extends CalendarUtils {\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    args.viewStart = subWeeks(startOfMonth(args.viewDate), 1);\n    args.viewEnd = addWeeks(endOfMonth(args.viewDate), 1);\n    return super.getMonthView(args);\n  }\n}\n\n@Component({\n  selector: 'mwl-demo-component',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: 'template.html',\n  providers: [\n    {\n      provide: CalendarUtils,\n      useClass: MyCalendarUtils,\n    },\n  ],\n})\nexport class DemoComponent {\n  viewDate: Date = new Date();\n\n  events: CalendarEvent[] = [];\n}\n"},34065:function(n,a,s){s.r(a),a.default="import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { DemoUtilsModule } from '../demo-utils/module';\nimport { DemoComponent } from './component';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory,\n    }),\n    DemoUtilsModule,\n    RouterModule.forChild([{ path: '', component: DemoComponent }]),\n  ],\n  declarations: [DemoComponent],\n  exports: [DemoComponent],\n})\nexport class DemoModule {}\n"},34665:function(n,a,s){s.r(a),a.default='<mwl-calendar-month-view [viewDate]="viewDate" [events]="events">\n</mwl-calendar-month-view>\n'}}]);